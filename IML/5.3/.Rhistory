library(e1071)
?svm
install(e1071)
install.packages(e1071)
install.packages('e1071')
library(e1071)
?svm
?select
?sample
sample(c(1,-1), 1 )
sample(c(1,-1), 1 )
sample(c(1,-1), 1 )
sample(c(1,-1), 1 )
sample(c(1,-1), 1 )
sample(c(1,-1), 1 )
sample(c(1,-1), 1 )
?rnorm
source('script.r')
train = generate_data(200)
?sample
source('script.r')
train = generate_data(200)
source('script.r')
train = generate_data(200)
source('script.r')
train = generate_data(200)
plot(train)
View(train)
source('script.r')
train = generate_data(200)
View(train)
plot(train)
plot(train[, 2:3])
?svm
fit = svm(Y~., data=train, kernel="linear", cost=10)
plot(fit, train)
plot(fit, train)
plot(fit)
plot(fit, train)
plot(train)
plot(fit, train)
fit = svm(Y~., data=train, kernel="linear", cost=10, scale=FALSE)
plot(fit, train)
plot(fit, train)
plot(fit, train)
plot(fit, train)
plot(fitted(fit))
summary(fit)
fit = svm(Y~X1 + X2, data=train, kernel="linear", cost=10, scale=FALSE)
summary(fit)
plot(fit)
plot(fit, train)
plot.svm(fit)
?svm
library(MASS)
plot(fit, train)
fit = svm(Y~X1 + X2, data=train, kernel="linear", cost=10, scale=FALSE)
plot(fit, train)
?plot.svm
plot.svm(fit, train)
plot(fit, train)
plot(fit, train, X1 ~ X2)
plot(fit, train, X1 ~ X2, slice=list(Y = 1))
fit = svm(Y~., data=train, kernel="linear", cost=10, scale=FALSE)
plot(fit, train, X1 ~ X2, slice=list(Y = 1))
plot(fit, train)
fit = svm(factor(Y)~., data=train, kernel="linear", cost=10, scale=FALSE)
summary(fit)
plot(fit, train)
source('script.r')
plot(fit5, train)
plot(fit2, train)
fit.radial = svm(factor(Y)~., data=train, kernel="radial", cost=1, scale=F)
plot(fit.radial, train)
fit.radial = svm(factor(Y)~., data=train, kernel="radial", cost=2, scale=F)
plot(fit.radial, train)
fit.radial = svm(factor(Y)~., data=train, kernel="radial", cost=10, scale=F)
plot(fit.radial, train)
fit.polynomial = svm(factor(Y)~., data=train, kernel="polynomial", degree=2, cost=1, scale=F)
plot(fit.polynomial, train)
source('script.r')
View(train)
source('script.r')
source('script.r')
predict(fit.linear2, train)
sum(predict(fit.linear2, train) == train$Y )/200
source('script.r')
train$Y == 1
sumtrain$Y == 1)
sum(train$Y == 1)
sum(train$Y !
= 1)
sum(train$Y != 1)
